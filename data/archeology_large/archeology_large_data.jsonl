{"instance_id": "1", "selected_database": "archeology_large", "query": "For each archaeological site, I need its Point Cloud Density Ratio and Feature Extraction Efficiency to identify sites with high potential for feature extraction. Please include the site code, average PCDR value, and average FEE value. Ensure that all sites are included, even if some data might be missing. Sort the results by average FEE in descending order.", "preprocess_sql": [], "clean_up_sqls": [], "sol_sql": ["\n/*\n * SQL Intent: Identify sites with high potential for feature extraction based on point cloud characteristics.\n * Knowledge Used: #2 (Point Cloud Density Ratio - PCDR), #32 (Feature Extraction Efficiency - FEE)\n * Advanced Functions: POWER(), NULLIF(), ROUND()\n * Difficulty: Normal\n */\nWITH feature_potential AS (\n    -- Step 1: Calculate Point Cloud Density Ratio (PCDR) for each scan, using TotalPts, CloudDense, and AreaM2 from relevant tables.\n    SELECT\n        s.zoneref AS site_code,\n        spc.totalpts,\n        spc.clouddense,\n        ss.aream2,\n        CASE\n            WHEN spc.clouddense > 0 AND ss.aream2 > 0 THEN spc.totalpts / (spc.clouddense * ss.aream2)\n            ELSE 0  -- Handle cases where division by zero might occur\n        END AS pcdr\n    FROM sites si\n    LEFT JOIN scans s ON si.zoneregistry = s.zoneref\n    LEFT JOIN scanpointcloud spc ON s.arcref = spc.arcref\n    LEFT JOIN scanspatial ss ON s.arcref = ss.arcref\n),\nextraction_metrics AS (\n    -- Step 2: Calculate Feature Extraction Efficiency (FEE) using PCDR and feature counts from scanfeatures.\n    SELECT\n        fp.site_code,\n        fp.pcdr,\n        sf.traitcount,\n        sf.articount,\n        CASE\n            WHEN fp.pcdr > 0 THEN (sf.traitcount + sf.articount) / (fp.pcdr * SQRT(fp.clouddense)) * 1000\n            ELSE 0  -- Handle cases where division by zero might occur\n        END AS fee\n    FROM feature_potential fp\n    JOIN scanfeatures sf ON fp.site_code = sf.zoneref\n)\n-- Step 3: Aggregate and present the results, calculating average PCDR and FEE for each site.\nSELECT\n    site_code,\n    ROUND(AVG(pcdr)::numeric, 2) AS avg_pcdr,\n    ROUND(AVG(fee)::numeric, 2) AS avg_fee\nFROM extraction_metrics\nGROUP BY site_code\nORDER BY avg_fee DESC;\n"], "external_knowledge": [2, 32], "test_cases": [], "category": "Query", "high_level": false, "conditions": {"decimal": 2, "distinct": false}}
